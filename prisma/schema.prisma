// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb" // <--- CHANGE THIS FROM "postgresql" to "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId // MongoDB specific ID
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  password      String?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId // MongoDB specific ID
  userId            String  @db.ObjectId // Reference to User ID
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts") // Recommended for MongoDB
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId // MongoDB specific ID
  sessionToken String   @unique
  userId       String   @db.ObjectId // Reference to User ID
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions") // Recommended for MongoDB
}

model VerificationToken {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId // MongoDB specific ID
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens") // Recommended for MongoDB
}